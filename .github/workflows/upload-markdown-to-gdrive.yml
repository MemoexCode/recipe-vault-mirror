name: Upload Markdown Snapshot to Google Drive (Robust Non-Interactive)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "docs/**/*.md"
      - "*.md"

jobs:
  snapshot:
    runs-on: ubuntu-latest

    env:
      FOLDER_ID: ${{ secrets.GDRIVE_BASE44_FOLDER_ID }}
      GDRIVE_JSON: ${{ secrets.GDRIVE_SERVICE_KEY }}

    steps:
      # üß∞ 1. Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v4

      # üßæ 2. Snapshot-Datei erstellen
      - name: Create FULL Markdown Snapshot
        id: snapshot
        run: |
          SNAPSHOT="recipe-vault_FULLCODE_$(date +'%Y-%m-%d_%H-%M-%S').md"
          echo "# üì¶ Recipe Vault ‚Äì Full Source Snapshot" > "$SNAPSHOT"
          echo "" >> "$SNAPSHOT"
          echo "**Timestamp:** $(date)" >> "$SNAPSHOT"
          echo "**Repository:** $GITHUB_REPOSITORY" >> "$SNAPSHOT"
          echo "" >> "$SNAPSHOT"
          echo "## üìÅ Repository Structure" >> "$SNAPSHOT"
          tree -a -I ".git|node_modules" >> "$SNAPSHOT" || echo "(tree not available)" >> "$SNAPSHOT"
          echo "" >> "$SNAPSHOT"
          echo "## üß© Complete File Contents" >> "$SNAPSHOT"
          echo "" >> "$SNAPSHOT"
          while IFS= read -r -d '' file; do
            [ "$file" = "./$SNAPSHOT" ] && continue
            echo -e "\n\n### File: \`$file\`\n\`\`\`\n" >> "$SNAPSHOT"
            cat "$file" >> "$SNAPSHOT"
            echo -e "\n\`\`\`" >> "$SNAPSHOT"
          done < <(find . -type f -not -path "./.git/*" -not -path "./node_modules/*" -print0)
          echo "SNAPSHOT=$SNAPSHOT" >> $GITHUB_ENV

      # üîê 3. Authentifizieren und Debug-Scopes pr√ºfen
      - name: Verify Google Drive Access Scopes
        run: |
          echo "üîê Authenticating via Service Account..."
          echo "$GDRIVE_JSON" > /tmp/sa.json
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/sa.json"

          echo "üì¶ Installing dependencies..."
          sudo apt-get update -y -qq && sudo apt-get install -y -qq jq curl google-cloud-cli > /dev/null

          echo "üîë Activating service account..."
          gcloud auth activate-service-account --key-file=/tmp/sa.json --quiet
          ACCESS_TOKEN=$(gcloud auth application-default print-access-token)

          if [ -z "$ACCESS_TOKEN" ]; then
            echo "‚ùå No access token received! Check your GDRIVE_SERVICE_KEY secret."
            exit 1
          fi

          echo "üß™ Verifying token scopes..."
          SCOPES=$(curl -s "https://oauth2.googleapis.com/tokeninfo?access_token=$ACCESS_TOKEN" | jq -r '.scope')
          echo "üîç Scopes returned: $SCOPES"

          if [[ "$SCOPES" != *"https://www.googleapis.com/auth/drive"* ]] || [[ "$SCOPES" != *"https://www.googleapis.com/auth/drive.file"* ]]; then
            echo "üö´ Insufficient scopes detected!"
            echo "Your token must include:"
            echo "  ‚Ä¢ https://www.googleapis.com/auth/drive"
            echo "  ‚Ä¢ https://www.googleapis.com/auth/drive.file"
            exit 1
          fi
          echo "‚úÖ Scope validation passed."

          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      # üì§ 4. Datei zu Google Drive hochladen
      - name: Upload Snapshot to Google Drive
        run: |
          echo "üì§ Uploading $SNAPSHOT to Google Drive folder..."
          UPLOAD_RESULT=$(curl -s -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -F "metadata={name : '$SNAPSHOT', parents : ['$FOLDER_ID']};type=application/json;charset=UTF-8" \
            -F "file=@$SNAPSHOT;type=text/markdown" \
            "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart")

          FILE_ID=$(echo "$UPLOAD_RESULT" | jq -r '.id')

          if [ -z "$FILE_ID" ] || [ "$FILE_ID" = "null" ]; then
            echo "‚ùå Upload failed! Response:"
            echo "$UPLOAD_RESULT"
            exit 1
          fi

          FILE_INFO=$(curl -s -X GET \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            "https://www.googleapis.com/drive/v3/files/$FILE_ID?fields=webViewLink,name")

          WEBLINK=$(echo "$FILE_INFO" | jq -r '.webViewLink')
          echo "‚úÖ Upload successful!"
          echo "ü™™ File ID: $FILE_ID"
          echo "üîó Web View Link: $WEBLINK"
